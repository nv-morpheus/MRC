# SPDX-FileCopyrightText: Copyright (c) 2022, NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: Apache-2.0
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

name: Build pull request

on:
  push:
    branches:
      - 'pull-request/**'
      - 'branch-*'
      - 'main'

# This allows a subsequently queued workflow run to interrupt previous runs
concurrency:
  group: '${{ github.workflow }} @ ${{ github.event.pull_request.head.label || github.head_ref || github.ref }}'
  cancel-in-progress: true

permissions:
  actions: none
  checks: none
  contents: read
  deployments: none
  discussions: none
  id-token: write
  issues: none
  packages: read
  pages: none
  pull-requests: read
  repository-projects: none
  security-events: none
  statuses: none

jobs:
  prepare:
    name: Prepare
    runs-on: ubuntu-latest
    container:
      image: rapidsai/ci:latest
    steps:
      - name: Get PR Info
        id: get-pr-info
        uses: rapidsai/shared-action-workflows/get-pr-info@branch-23.08
    outputs:
      pr_info: ${{ steps.get-pr-info.outputs.pr-info }}
      is_pr: ${{ startsWith(github.ref_name, 'pull-request/') }}
      is_main_branch: ${{ startsWith(github.ref_name, 'branch-') }}
      has_conda_build_label: ${{ contains(fromJSON(steps.get-pr-info.outputs.pr-info).labels.*.name, 'conda-build') }}
  ci_pipe:
    name: CI Pipeline
    needs: [prepare]
    uses: ./.github/workflows/ci_pipe.yml
    with:
      run_check: ${{ fromJSON(needs.prepare.outputs.is_pr) }}
      run_package_conda: ${{ fromJSON(needs.prepare.outputs.is_main_branch) || fromJSON(needs.prepare.outputs.has_conda_build_label) }}
      upload_conda_package: ${{ fromJSON(needs.prepare.outputs.is_main_branch) }}
      container: nvcr.io/ea-nvidia-morpheus/morpheus:mrc-ci-build-230711
      test_container: nvcr.io/ea-nvidia-morpheus/morpheus:mrc-ci-test-230711
      pr_info: ${{ needs.prepare.outputs.pr_info }}
    secrets:
      CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      CONDA_TOKEN: ${{ secrets.CONDA_TOKEN }}
      NGC_API_KEY: ${{ secrets.NGC_API_KEY }}
