//  SPDX-FileCopyrightText: Copyright (c) 2023, NVIDIA CORPORATION & AFFILIATES. All rights reserved.
//  SPDX-License-Identifier: Apache-2.0
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//  http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
{
    "build": {
        "args": {
            "USERNAME": "${localEnv:USER}",
            "USER_ID": "${localEnv:UID}"
        },
        "context": "..",
        "dockerfile": "${localWorkspaceFolder}/Dockerfile",
        "target": "development"
    },
    "customizations": {
        "vscode": {
            "extensions": [
                "eamodio.gitlens",
                "formulahendry.terminal",
                "hbenl.vscode-test-explorer",
                "josetr.cmake-language-support-vscode",
                "llvm-vs-code-extensions.vscode-clangd",
                "matepek.vscode-catch2-test-adapter",
                "ms-dotnettools.vscode-dotnet-runtime",
                "ms-vscode.cmake-tools",
                "ms-vscode.cpptools-extension-pack",
                "ms-vscode.cpptools-themes",
                "ms-vscode.cpptools",
                "ms-vscode.test-adapter-converter",
                "xaver.clang-format"
            ],
            "settings": {
                "cmake.cmakePath": "cmake", // Ensure we use the default from the conda environment
                // Fix for https://github.com/dotnet/vscode-dotnet-runtime/issues/159
                // Once version 1.6.1 of the extension has been release, this can be removed
                "cmake.languageSupport.dotnetPath": "/usr/bin/dotnet",
            }
        }
    },
    "hostRequirements": {
        "gpu": true
    },
    "initializeCommand": [ "${localWorkspaceFolder}/.devcontainer/initialize-command.sh" ],
    "mounts": [
        "source=${localEnv:HOME}/.config,target=/home/${localEnv:USER}/.config,type=bind",
        // Mount the necessary files for GDB pretty-printing to work
        "source=${localWorkspaceFolder}/.devcontainer/opt/mrc/etc/.gdbinit,target=/home/${localEnv:USER}/.gdbinit,type=bind",
    ],
    "features": {
        "ghcr.io/devcontainers/features/git-lfs": {}
    },
    "name": "mrc-dev",
    "overrideCommand": true, // infinite loop of sleeps,
    "remoteUser": "${localEnv:USER}",
    "runArgs": [
        "--network=host",
        "--cap-add=SYS_PTRACE",
        "--cap-add=SYS_NICE",
        "--security-opt",
        "seccomp=unconfined"
    ],
    "updateRemoteUserUID": true,
    "workspaceFolder": "/work",
    "workspaceMount": "source=${localWorkspaceFolder},target=/work,type=bind,consistency=cached"
}
