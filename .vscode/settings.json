{
    "C_Cpp.files.exclude": {
        "**/.vscode": true,
        "**/vcpkg_installed": true
    },
    "[cmake]": {
        "editor.tabSize": 2
    },
    "[cpp]": {
        "editor.detectIndentation": false,
        "editor.formatOnSave": true,
        "editor.semanticHighlighting.enabled": true,
        "editor.suggest.insertMode": "replace",
        "editor.tabSize": 4,
        "editor.wordBasedSuggestions": false,
        "editor.wordWrapColumn": 120
    },
    "[python]": {
        "editor.codeActionsOnSave": {
            "source.organizeImports": true
        },
        "editor.formatOnSave": true,
        "editor.rulers": [
            120
        ],
        "editor.tabSize": 4
    },
    "cmake.configureArgs": [
        "-DCMAKE_MESSAGE_CONTEXT_SHOW:BOOL=ON", // Show message context by default
        "-DSRF_PYTHON_INPLACE_BUILD:BOOL=ON" // Allow inplace build for python. Use `pip install -e .` from the python folder to install
    ],
    "files.insertFinalNewline": true,
    "files.trimTrailingWhitespace": true,
    "files.watcherExclude": {
        "**/.cache/**": true,
        "**/.git/objects/**": true,
        "**/.git/subtree-cache/**": true,
        "**/.hg/store/**": true,
        "**/node_modules/*/**": true
    },
    "python.analysis.extraPaths": [
        "python"
    ],
    "python.autoComplete.extraPaths": [
        "./python"
    ],
    "python.formatting.provider": "yapf",
    "python.formatting.yapfArgs": [
        "--style=${workspaceFolder}/python/setup.cfg"
    ],
    "python.linting.flake8Args": [
        "--config=${workspaceFolder}/python/setup.cfg"
    ],
    "python.linting.flake8Enabled": true,
    "python.linting.pylintArgs": [
        "--rcfile=${workspaceFolder}/python/.pylintrc"
    ],
    "python.linting.pylintEnabled": true,
    "python.testing.cwd": "${workspaceFolder}/python",
    "python.testing.pytestArgs": [
        "-s"
    ],
    "python.testing.pytestEnabled": true,
    "python.testing.unittestEnabled": false,
    "testMate.cpp.debug.configTemplate": {
        "args": "${argsArray}",
        "cwd": "${cwd}",
        "darwin": {
            "MIMode": "lldb",
            "type": "cppdbg"
        },
        "env": "${envObj}",
        "environment": "${envObjArray}",
        "linux": {
            "MIMode": "gdb",
            "symbolLoadInfo": {
                "exceptionList": "*libsrf*.so",
                "loadAll": false
            },
            "type": "cppdbg"
        },
        "program": "${exec}",
        "setupCommands": [
            {
                "description": "Enable pretty-printing for gdb",
                "text": "-enable-pretty-printing"
            },
            {
                "description": "Skip stdio-common files",
                "text": "-interpreter-exec console \"skip -gfi **/bits/*.h\""
            }
            // {
            //     "description": "Stay on same thread when debugging",
            //     "text": "-interpreter-exec console \"set scheduler-locking step\""
            // }
        ],
        "sourceFileMap": "${sourceFileMapObj}",
        "testMate.cpp.debug.setEnv": {
            "GLOG_v": "10",
            "GTEST_CATCH_EXCEPTIONS": "0", // Allow the debugger to catch exceptions
            "UCX_ERROR_SIGNALS": "" // Prevent UCX from capturing errors
        },
        "type": "cppvsdbg",
        "win32": {
            "type": "cppvsdbg"
        }
    },
    "testMate.cpp.log.logpanel": true,
    "testMate.cpp.test.executables": "{build,Build,BUILD,out,Out,OUT}/**/*{test,Test,TEST}_*.x"
}
